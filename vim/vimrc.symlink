set nocompatible

"*****************************************************************************
" Plugins
"*****************************************************************************

" Install vim-plug if missing
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.vim/bundle')

" Git stuff
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" UI (Colorschemes and tagbars)
Plug 'morhetz/gruvbox'
Plug 'bling/vim-airline'
Plug 'majutsushi/tagbar'
Plug 'kshenoy/vim-signature'

" Code Prettifiers/Helpers
Plug 'bronson/vim-trailing-whitespace'
Plug 'scrooloose/syntastic'
Plug 'kien/ctrlp.vim'
Plug 'Valloric/YouCompleteMe'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-surround'
Plug 'chrisbra/Colorizer'
Plug 'janko-m/vim-test'
Plug 'jiangmiao/auto-pairs'

" Frontend Dev
Plug 'pangloss/vim-javascript',
Plug 'othree/html5.vim'
Plug 'othree/jspc.vim', { 'for': 'javascript' }
Plug 'ramitos/jsctags', { 'for': 'javascript' }
Plug 'marijnh/tern_for_vim', { 'do': 'npm install', 'for': 'javascript' }
Plug 'mattn/emmet-vim'
Plug 'moll/vim-node'
Plug 'mxw/vim-jsx'
Plug 'hail2u/vim-css3-syntax'

" Snippets
Plug 'honza/vim-snippets'
Plug 'sirver/ultisnips'
Plug 'epilande/vim-react-snippets'
Plug 'epilande/vim-es2015-snippets'

" Searching
Plug 'mileszs/ack.vim'
Plug 'justinmk/vim-sneak'

" Miscellaneous
Plug 'xolox/vim-notes'
Plug 'xolox/vim-misc'

call plug#end()

"*****************************************************************************
" Basic Setup
"*****************************************************************************"

" Detect filetype
filetype on

" Encoding
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8
set binary
set ttyfast

" Tabspace settings
set tabstop=4
set shiftwidth=4
set softtabstop=0
set expandtab

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Set some vim vars
set updatetime=1000
set laststatus=2
set splitbelow
set splitright

" Line numbers
set number
set relativenumber

" Autosave
autocmd CursorHold,CursorHoldI,InsertLeave * silent! wall

" vim-javascript
augroup vimrc-javascript
    autocmd!
    autocmd FileType javascript set tabstop=2|set shiftwidth=2|set expandtab softtabstop=2 smartindent
augroup END

"*****************************************************************************
" UI Tweaks
"*****************************************************************************

" Enable syntax highlighting
syntax enable

" Enable lovely retro colour
set background=dark
colorscheme gruvbox

" Enable 256 colors in terminal
set t_Co=256

" Set comments to autoitalic
highlight Comment cterm=italic

"*****************************************************************************
" Mappings
"*****************************************************************************

" Map Leader to space
let mapleader = "\<Space>"
let g:mapleader = "\<Space>"

" Fast editing of vimrc
map <leader>e :e! ~/.vimrc<cr>

" Tabs (well buffers)
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>

" Git
noremap <Leader>gs :Gstatus<CR>
noremap <Leader>ga :Gwrite<CR>
noremap <Leader>gc :Gcommit<CR>
noremap <Leader>gsh :Gpush<CR>
noremap <Leader>gb :Gblame<CR>
noremap <Leader>gr :Gremove<CR>
noremap <Leader>gll :Gpull<CR>
noremap <Leader>gd :Gvdiff<CR>

" Close buffer
noremap <Leader>c :bd<CR>

"*****************************************************************************
" Abbreviations
"*****************************************************************************

" Catches fat-fingered/thoughtless exits
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall
cnoremap sudow w !sudo tee % >/dev/null

"*****************************************************************************
" Plugin config
"*****************************************************************************

" YCM close scratch
autocmd CompleteDone * pclose
let g:ycm_confirm_extra_conf = 1

" Javascript shorthand
set cole=1
let g:javascript_conceal_arrow_function = "⇒"
let g:javascript_conceal_function       = "ƒ"
let g:javascript_conceal_null           = "ø"
let g:javascript_conceal_this           = "@"

" Notes settings
let g:notes_directories = ['~/Code/Notes']

" Syntastic
let g:syntastic_javascript_checkers=['standard']
autocmd bufwritepost *.js silent !standard-format -w %
set autoread

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))|tags$'
let g:ctrlp_extensions = ['tag']
let g:ctrlp_use_caching = 1

" Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1

" Tagbar
nnoremap ™ :TagbarToggle<CR>
let g:tagbar_autofocus = 1
let g:tagbar_autoclose = 1

" Git gutter
nnoremap <F2> :GitGutterSignsToggle<CR>
highlight clear SignColumn
highlight link GitGutterAdd GruvboxGreen
highlight link GitGutterChange GruvboxAqua
highlight link GitGutterDelete GruvboxRed
highlight link GitGutterChangeDelete GruvboxAqua

" Utilsnips
let g:UltiSnipsExpandTrigger = '<C-l>'
let g:UltiSnipsJumpForwardTrigger = '<c-l>'
let g:UltiSnipsJumpBackwardTrigger = '<c-z>'
